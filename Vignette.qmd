---
title: "Vignette - NFL Game Outcome Prediction Modeling"
author: "Anshi Arora, Joshua Charfauros, Christina Cui, Sean Reagan"
format: html
editor: visual
---

```{r setup, echo=FALSE, warning=FALSE, message=FALSE}
library(nflfastR)
library(knitr)
```

# Introduction

In the NFL world, predicting game outcomes is a highly sought after accomplishment for a wide range of stakeholders like teams, analysts, fans, etc. A wide variety of approaches and methods have been utilized in sports forecasting but the application of neural networks to this field is still being developed. By leveraging historical play-by-play data, which includes detailed information on team performance, player actions, game context, and situational factors, we aim to build a neural network model that can forecast the winner of an NFL game with a high degree of accuracy.

# Overview of the NFLFastR Library and Dataset

The NFLFastR Library is a package in R that provides access to detailed play-by-play data for NFL games. Statistics about every play, including yardages, player stats, game situations, win probability, down, etc., are included in the datasets. Overall information about each game (final score, precipitation, home team, weekday, etc.) is also included.

The package includes helper functions to pull specific data. We will specifically be using the following function:

load_pbp(): downloads play-by-play data for a given season (or multiple)

The usage of this function to pull play-by-play data for years 2022-2024 is displayed below. A small subset of the dataframe is also shown.

```{r, cache = T, message = F, warning = F}
pbp_example <- load_pbp(2022:2024)
kable(head(pbp_example[,c(1, 2, 4, 11, 15, 26, 13)], 5))
```

As you can see the first few observations are different plays from the same game.

The dataset for each year's play-by-play data has 372 variables in total. The definitions for each variable can be found in the library's directory. Here is the link to look through the variables:

[www.nflfastr.com/articles/stats_variables.html](https://www.nflfastr.com/articles/stats_variables.html)

# Objectives and Methodology

The objective of this vignette is to use a multitude of variables to predict binary win/loss outcomes of a game. To make the model more accurate (and applicable) than just using the individual game stats, we want to consider the outcomes and statistics from previous games in which the team played. Furthermore, we want to consider both long and short term trends and characteristics in their playing data.

In order to do this, we will begin by preproccesing our play-by-play data into a time series format where multiple consecutive games make up the sequence. To determine, which variables have strong correlations with game win, and thereby likely will serve as strong predictors, we will be conducting some exploratory data analysis. Then, we will train a neural network (specifically a LSTM) model on this time series data. After making the model, we can evaluate its accuracy on the validation/test set and account for any issues like overfitting. Finally, this model can be used to make predictions.

More information on why/how time series and LSTM model were used can be found in their respective sections below.

Here is a visualization of this vignette's methodological steps:

### Steps

```{mermaid}
flowchart TD
    A["Review NFLFastR Library: 
    Get Familiar with the Functions, Structure of Data, Variables"]
    B["Exploratory Data Analysis:
    Looking at Trends over Time, Correlations between Variables etc."]
    C["Data Preprocessing:
    Cleaning, Formatting Time Series, Wrangling into 3D Array, Creating Train/Test Sets"]
    E["Building the LSTM Neural Network Model"]
    F["Training model and Adjusting Model based on Validation Set Results"]
    G["Making Predictions on Test Set"]
    A --> 
    B --> 
    C -->
    E --> 
    F -->
    G
```

# Exploratory Data Analysis

# Preprocessing & Time Series

#### General Preprocessing

NFLFastR already has a pre built, schedule data frame which has each observation as a an NFL game. It was built by Lee Sharpe and is explained in this article (<https://www.nflfastr.com/articles/beginners_guide.html#real-life-example-lets-make-a-win-total-model>). Sharpe's set, however, captures a lot of data we don't need, things like quarterback and coach name etc, and doesn't capture plenty of things we do care about, such as quantitative performance metrics. To solve this,

#### Why Time Series?

#### Time Series Preprocessing

# Building & Training the LSTM Model

#### LSTM Neural Network Model (Overview, Strengths, and When it is used)

#### Building the Model

#### Training the Model

# Adjusting Model & Making Predictions on Test Set

# Final Thoughts

# References/Further Resources
